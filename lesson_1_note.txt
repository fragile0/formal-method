形式化方法

lesson1

1.课程内容
	1.1 cs中的数学
		1.1.1 算法分析
		1.1.2 数据结构中的离散数学
		1.1.3 深度学习中的线性代数(线性代数 线性空间)
	1.2 这门课中的不同观点
		数学逻辑
		1.2.1 形式化符号
		1.2.2 证明系统
		1.2.3 可满足问题(用计算机解决数学问题)
	1.3 形式化方法在计算机科学上的应用
		软件测试 程序验证 程序合成(自动编程) 恶意程序的分析
		模型检测 自动样例生成 泛型理论 优化问题
		形式化方法是数学和cs的交叉
	1.4 什么问题数学计算机解决不了？计算机能解决数学问题吗？
		数学能解决计算机问题吗？能解决什么问题？
	1.5 课程中具体的课题
		1.5.1 对于程序系统建模的数学
		1.5.2 证明系统和可满足问题(SMT)
		1.5.3 建模(应用在不同领域中)
	1.6 历史和观点
		超过2000年 十分多成果
		课程网站 xxx
		每周五14点 
	1.7 有关课程
		课程 + 回顾 + 作业(每两周一次作业，python,实践形式) + 考试
		课程教材：没有可用教材
		以下书可能对于课程有所帮助：数理逻辑 构造逻辑 curry-howord同构
	1.8 讨论课
		Piazza讨论组 
	1.9 评定
		40 + 30 + 30 作业+期中+期末
		计算机和数学  理论和实践
2.数学基础
	2.1 内容
		2.1.1 集合 关系 函数
		2.1.2 基本计算复杂性结果
		2.1.3 上下文无关文法
		2.1.4 归纳法
	2.2 集合	
		2.2.1 p表示幂集 p(A) = {B | B ∈ A};
		2.2.2 A的幂集是A元素的2的N次方
	2.3 关系
		定义: 关系是两个集合笛卡尔的子集
		dom 定义域  dom(R)=#1R
		range 值域	range(R)=#2R
		等价关系：对称 传递 自反	等价关系：对称
		等价类：所有和a构成二元关系的类的集合
		一个等价类可以讲一个集合划分成不相交的子集
	2.4 函数	
		函数是一种特殊的二元关系，
		total : 函数定义 定义域是全集
		partial：部分定义 定义域不是全集
		F：A→B
3.基本计算复杂性的概念
	3.1 最高复杂度 最低复杂度  准确 O Ω sita 
	3.2 (不可判定性)现实中大部分问题计算机没有办法解
		给定一个程序 判断程序是否会终止 -- 无法解决
	3.3 不可判定不等于不可解决
		近似法, 解决特殊情况...
	3.4 p复杂度 多项式复杂度 最好解决
		np复杂度 指数级别复杂度 判断解是否成立是多项式复杂度
		非确定多项式
		p =? np
		npc 所有的np问题都能转化成npc问题 np hard